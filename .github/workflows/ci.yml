name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run check
      
    - name: Build application
      run: npm run build
      
    - name: Test build output
      run: |
        if [ -f "dist/server/index.js" ]; then
          echo "✅ Server build successful"
        else
          echo "❌ Server build failed"
          exit 1
        fi
        
        if [ -f "dist/public/index.html" ]; then
          echo "✅ Client build successful"
        else
          echo "❌ Client build failed"
          exit 1
        fi

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=high
      
    - name: Check for vulnerabilities
      run: |
        if npm audit --audit-level=high --json | jq -e '.vulnerabilities | length > 0' > /dev/null; then
          echo "❌ High severity vulnerabilities found"
          npm audit --audit-level=high
          exit 1
        else
          echo "✅ No high severity vulnerabilities found"
        fi

  deploy:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Create deployment artifact
      run: |
        tar -czf memomind-${{ github.sha }}.tar.gz dist/ package.json package-lock.json
        echo "DEPLOYMENT_ARTIFACT=memomind-${{ github.sha }}.tar.gz" >> $GITHUB_ENV
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: memomind-build-${{ github.sha }}
        path: memomind-${{ github.sha }}.tar.gz
        retention-days: 30
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## MemoMind ${{ github.ref }}
          
          ### Changes
          - Updated dependencies
          - Security improvements
          - Performance optimizations
          
          ### Installation
          ```bash
          npm install
          npm run build
          npm start
          ```
        draft: false
        prerelease: false
